@page "/{_contextpageurlpath?}"
@rendermode InteractiveServer

@inject Applicationprovider applicationprovider
@inject IHttpClientFactory ihttpclientfactory
@inject NavigationManager navigationmanager
@inject Cookies.Cookiesprovider cookiesprovider
@inject Modal.Modalservice modalservice

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app. Installation link here.

<div>
    <NavLink class="dropdown-item" href="Installation">
        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Install and ensure database created.
    </NavLink>
</div>

@code{

    [Parameter]
    public string? _contextpageurlpath { get; set; }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            await this.cookiesprovider.Initcookiesprovider();
            var client = this.ihttpclientfactory.CreateClient();
            client.BaseAddress = new Uri(this.navigationmanager.BaseUri);
            var httpresponsemessage = await client.GetAsync("api/authcookie");
            var authcookie = await httpresponsemessage.Content.ReadAsStringAsync();
            if (!string.IsNullOrEmpty(authcookie))
            {
                await this.cookiesprovider.Setcookie(Shared.Constants.Authentication.Authcookiename, authcookie, 10);
            }

            string cookievalue = await this.cookiesprovider.Getcookie(Shared.Constants.Authentication.Authcookiename);

            await this.applicationprovider.Establishapplicationconnection();
        }

        await base.OnAfterRenderAsync(firstRender);
    }

}